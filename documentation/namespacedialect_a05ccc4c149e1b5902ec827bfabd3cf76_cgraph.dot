digraph "dialect::doHOLA"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node10 [label="dialect::doHOLA",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node10 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="dialect::buildAllChainsIn\lGraph",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacedialect.html#a78c126f4a90d9e38c4b00e85db20f8c7",tooltip="Convenience method to build all the chains and cycles in a graph. "];
  Node10 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="dialect::ACALayout\l::createAlignments",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1ACALayout.html#a0fc4364e821983142e55e978e33e29a2",tooltip="Creates alignments. "];
  Node10 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="dialect::doNearAlignments",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacedialect.html#a0e008284e07fda0a6c7e60e1d501dfa9",tooltip="Look for nodes that are nearly aligned, and try to align them. "];
  Node10 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="dialect::Graph::getIEL",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Graph.html#a0dbf008d97d5a6ad814778217d2da948",tooltip="Read the ideal edge length of this Graph. "];
  Node10 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="dialect::Graph::getNumEdges",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Graph.html#abce986e93e2c1dd090a9cdfd924e0c99",tooltip="Say how many Edges there are in this Graph. "];
  Node10 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="dialect::Graph::getNumNodes",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Graph.html#af941c70fd0d10fd6cad07f61434aec93",tooltip="Say how many Nodes there are in this Graph. "];
  Node10 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="dialect::BoundingBox::h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structdialect_1_1BoundingBox.html#a0c3a42869c020255f63dfce1a891066d",tooltip="Get the height of the box. "];
  Node10 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="dialect::OrthoHubLayout\l::layout",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1OrthoHubLayout.html#a0b9a6aa806f4ccf26b448aa67d7fed95",tooltip="Try to orthogonalise hubs. "];
  Node18 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="dialect::ACALayout\l::applyOAsAllOrNothing",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1ACALayout.html#ad64d1f3c84dcd313ab48e57f4788b026",tooltip="Creates all the requested alignments, or none if any is infeasible. "];
  Node18 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="dialect::string_format",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacedialect.html#a7fdbc3f53251706e91936da1109bb644",tooltip="String formatting. "];
  Node18 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="dialect::ACALayout\l::updateSepMatrix",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1ACALayout.html#afb9467554d9931aee36e5825d4a574fb",tooltip="Update the SepMatrix of the Graph on which this ACALayout was built (if any). "];
  Node10 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="dialect::Graph::padAllNodes",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Graph.html#a955bdc479f10b59c0b53e3cf1e8f1aeb",tooltip="Add padding to all ndoes. "];
  Node10 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="dialect::peel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacedialect.html#a29b1d1583bf8668dde5e0252a2205eb1",tooltip="Perform the \"peeling\" process, in which the exterior trees are removed from the given Graph..."];
  Node23 -> Node24 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="dialect::NodeBuckets\l::takeLeaves",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structdialect_1_1NodeBuckets.html#a1058d0a33849b95a75ea5ee17ba979a4",tooltip="Return a copy of the bucket of leaves, and clear the latter. "];
  Node23 -> Node25 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="dialect::makeStemsFromLeaves",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacedialect.html#a7e4dc6aea10cd3c086f57c1be3960aeb",tooltip="Make a Stem object to represent each leaf. "];
  Node23 -> Node26 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="dialect::NodeBuckets\l::severNodes",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structdialect_1_1NodeBuckets.html#a7cba81f7da5c12fe1cad7c3b5173e556",tooltip="Sever the given Nodes from our Graph. "];
  Node26 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="dialect::Graph::severNode\lNotingNeighbours",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Graph.html#ad6434fe1d4f4fce48f5cd88bb943606c",tooltip="Like severNode but also returns a vector of all Nodes that were neighbours before severing..."];
  Node27 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="dialect::Node::getEdgeLookup",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Node.html#ab82a623cf2c0d97bfb3206b1b5d656f3",tooltip="Read-only access to this Node&#39;s lookup map for Edges by their ID. "];
  Node27 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="dialect::Graph::severEdge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Graph.html#a86f8762c5ddfdad4c934285da5bd4933",tooltip="Sever an Edge in this Graph. "];
  Node29 -> Node30 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="dialect::Edge::sever",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Edge.html#a04fbe3f536a380fc6d70bcb09728ca08",tooltip="\"Sever\" this Edge, i.e. remove it from the Nodes to which it is attached. "];
  Node29 -> Node31 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="dialect::Edge::id",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Edge.html#ab3e603f70b854af7f69b12bcb7a06de4",tooltip="Access the unique ID of this instance. "];
  Node26 -> Node32 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="dialect::NodeBuckets\l::moveNode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structdialect_1_1NodeBuckets.html#a39f69438d390511f0a13edab602adcad",tooltip="Move a node from one bucket to another. "];
  Node26 -> Node33 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="dialect::Graph::removeNodes",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Graph.html#a6e23356b35518e9fd3ca93e3b6dd555a",tooltip="Remove several Nodes from this Graph. "];
  Node23 -> Node34 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="dialect::Graph::isEmpty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Graph.html#ac4e10d13edd049dd2da80ea986b76fe9",tooltip="Say whether the Graph is empty, meaning that it has no Nodes. "];
  Node23 -> Node35 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="dialect::identifyRootNode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacedialect.html#a348cb1a0dfe6202d4ff711029a4ccf8e",tooltip="Mark as \"root\" the PeeledNode having largest serial number. "];
  Node35 -> Node36 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="dialect::Graph::getNodeLookup",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Graph.html#a5467080616423cac88b67242aedf0949",tooltip="Read-only access to this Graph&#39;s lookup map for Nodes by their ID. "];
  Node35 -> Node37 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="dialect::Graph::getNode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Graph.html#a0adf4a0dc63a42b8196f3864d1d31e04",tooltip="Look up a Node by ID. "];
  Node35 -> Node38 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="dialect::Node::setIsRoot",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Node.html#a5463ea8526de6f00794156ae79f8226b",tooltip="Say whether this Node is a root. This is useful when working with trees, and can be safely ignored wh..."];
  Node38 -> Node39 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="dialect::Node::isRoot",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Node.html#ac9a5e3dbde4ca97e31486de74305f101",tooltip="Check whether this Node has been marked as being a root. This is useful when working with trees..."];
  Node23 -> Node37 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 -> Node40 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="dialect::OrthoPlanariser\l::planarise",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1OrthoPlanariser.html#a9bd66fa7b2d08e447741fdbc590d1167",tooltip="Compute a planarisation of the given Graph. "];
  Node10 -> Node41 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="dialect::reattachTrees",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacedialect.html#a9d325ef46ea3385428712f16fedf71ef",tooltip="Given a planar orthogonal core, and the corresponding Trees (as resulting from the peeling process)..."];
  Node41 -> Node42 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="dialect::chooseBestPlacement",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacedialect.html#a74c07364fd697fc53a40c3dd7099ed95",tooltip="Choose the best TreePlacement from among a list of alternatives. "];
  Node41 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 -> Node43 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="dialect::RoutingAdapter\l::route",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structdialect_1_1RoutingAdapter.html#a017c2b77ed6ad722dc6e18435969a58b",tooltip="Do the routing. "];
  Node43 -> Node44 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 [label="Avoid::Router::processTransaction",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAvoid_1_1Router.html#ac4497126d8d4c76a122af565260941fc",tooltip="Finishes the current transaction and processes all the queued object changes efficiently. "];
  Node43 -> Node45 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="dialect::RoutingAdapter\l::recordRoutes",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structdialect_1_1RoutingAdapter.html#a72d4d8abc45334d96c84e6cfba985ffe",tooltip="Record the routes in the Edges. "];
  Node10 -> Node46 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="dialect::LeaflessOrthoRouter\l::route",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1LeaflessOrthoRouter.html#af58e911020f19a144303fc01e5b8c35e",tooltip="Do the routing. "];
  Node46 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 -> Node47 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="Avoid::Router::outputInstance\lToSVG",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAvoid_1_1Router.html#a458aae2d6447e0958e4916a8c29bbb47",tooltip="Generates an SVG file containing debug output and code that can be used to regenerate the instance..."];
  Node47 -> Node48 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 [label="Avoid::Polygon::at",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAvoid_1_1Polygon.html#ab2772d0cf1d0aad817a9814e20fce5ab",tooltip="Returns a specific point in the polygon. "];
  Node48 -> Node49 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 [label="Avoid::Polygon::size",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAvoid_1_1Polygon.html#a2f9e9c8c78407eefbde944e663d9711e",tooltip="Returns the number of points in this polygon. "];
  Node47 -> Node50 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node50 [label="Avoid::ReferencingPolygon::at",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAvoid_1_1ReferencingPolygon.html#a168bb0af7ba4147861f6b326d088da71",tooltip="Returns a specific point in the polygon. "];
  Node50 -> Node49 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node50 -> Node51 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node51 [label="Avoid::ReferencingPolygon\l::size",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAvoid_1_1ReferencingPolygon.html#a1dde474f3703dfe854768d5857a94067",tooltip="Returns the number of points in this polygon. "];
  Node47 -> Node52 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node52 [label="Avoid::Polygon::curvedPolyline",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAvoid_1_1Polygon.html#a35ab2aa804cc40ae127e0641e254d268",tooltip="Returns a curved approximation of this multi-segment PolyLine, with the corners replaced by smooth Be..."];
  Node52 -> Node53 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 [label="Avoid::Polygon::simplify",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAvoid_1_1Polygon.html#a2d3a0deb96bbff214b7035e481f0f0e8",tooltip="Returns a simplified Polyline, where all collinear line segments have been collapsed down into single..."];
  Node53 -> Node49 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node52 -> Node49 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 -> Node54 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node54 [label="Avoid::ConnRef::displayRoute",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAvoid_1_1ConnRef.html#ab7462cd69bd1d2c4dd318119558b4a94",tooltip="Returns a reference to the current display version of the route for the connector. "];
  Node54 -> Node55 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node55 [label="Avoid::Polygon::empty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAvoid_1_1Polygon.html#a477d0e8e93509d7955d1f4b4ca0abb0d",tooltip="Returns true if this polygon is empty. "];
  Node54 -> Node53 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 -> Node55 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 -> Node56 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node56 [label="Avoid::ClusterRef::id",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAvoid_1_1ClusterRef.html#a7a25b0c34cdad039906693265a9caac8",tooltip="Returns the ID of this cluster. "];
  Node47 -> Node57 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node57 [label="Avoid::ConnRef::id",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAvoid_1_1ConnRef.html#a053841a1fdef00b1e90f20f563e1c259",tooltip="Returns the ID of this connector. "];
  Node47 -> Node58 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node58 [label="Avoid::ClusterRef::\lpolygon",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAvoid_1_1ClusterRef.html#acd1fa20b079253d53d27abf50d2a8933",tooltip="Returns a reference to the polygon boundary of this cluster. "];
  Node47 -> Node59 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node59 [label="Avoid::JunctionRef\l::recommendedPosition",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAvoid_1_1JunctionRef.html#a5b376e38102c5e4c9b625be21a9e46d5",tooltip="Returns a recommended position for the junction based on improving hyperedge routes. This value will be set during routing when the improveHyperedgeRoutesMovingJunctions router option is set (the default). "];
  Node47 -> Node60 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node60 [label="Avoid::ClusterRef::\lrectangularPolygon",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAvoid_1_1ClusterRef.html#af7877b59ea4cb2939047f785382f8008",tooltip="Returns a reference to the rectangular boundary of this cluster. "];
  Node47 -> Node61 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node61 [label="Avoid::ConnRef::route",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAvoid_1_1ConnRef.html#a0d90245fbe772d30723bd578efa3a45d",tooltip="Returns a reference to the current raw \"debug\" route for the connector. "];
  Node47 -> Node49 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 -> Node51 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 -> Node44 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 -> Node45 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 -> Node62 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node62 [label="Avoid::ConnRef::setSource\lEndpoint",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAvoid_1_1ConnRef.html#a45ab41f9847a610ba17a326cd05cb266",tooltip="Sets just a new source endpoint for this connector. "];
  Node46 -> Node63 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node63 [label="Avoid::ConnRef::setDestEndpoint",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAvoid_1_1ConnRef.html#a7b216c9aa42811f1f2786adbda84f02e",tooltip="Sets just a new destination endpoint for this connector. "];
  Node10 -> Node64 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node64 [label="Avoid::Router::setRouting\lOption",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAvoid_1_1Router.html#a09f057f6d101f010588c9022893c9ac1",tooltip="Turn specific routing options on or off. "];
  Node10 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 -> Node65 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node65 [label="dialect::ACALayout\l::updateGraph",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1ACALayout.html#ad8987f21eba0008c7f43ecbbc6b961fd",tooltip="For forward compatibility (i.e. with Graphs), we offer a convenience method to update the Graph (when..."];
  Node65 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 -> Node66 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node66 [label="dialect::BoundingBox::w",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structdialect_1_1BoundingBox.html#a467c0c9f4464e66abdc2eb342f3f7c57",tooltip="Get the width of the box. "];
}
