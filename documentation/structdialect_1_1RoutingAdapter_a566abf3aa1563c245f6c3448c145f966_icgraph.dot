digraph "dialect::RoutingAdapter::addNodes"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node10 [label="dialect::RoutingAdapter\l::addNodes",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="dialect::Graph::addBendless\lSubnetworkToRoutingAdapter",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Graph.html#af84d080b9c143ea05307912dd1cdfda9",tooltip="Add all Nodes, and all those Edges having no bend nodes within them, to a given RoutingAdapter. This is useful when precisely those Edges are viewed as needing a route which do not already have any bend nodes. "];
  Node10 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="dialect::LeaflessOrthoRouter\l::LeaflessOrthoRouter",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1LeaflessOrthoRouter.html#af679a8ea90e4f0ef30a22cb89afc4dbd",tooltip="Standard constructor. "];
  Node10 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="dialect::Graph::route",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Graph.html#a06192e3eaecef5bf6a1e11e62502622f",tooltip="Do a libavoid connector routing on all Edges in the Graph. "];
  Node13 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="dialect::Graph::buildUnique\lBendPoints",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Graph.html#a8493b1e54c6eb3b2eb732854f8f0d734",tooltip="Build and return Nodes representing every point at which any Edge has a bend in its connector route..."];
}
