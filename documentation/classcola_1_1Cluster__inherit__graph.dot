digraph "cola::Cluster"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{cola::Cluster\n|+ bounds\l+ varRect\l+ vXMin\l+ vXMax\l+ vYMin\l+ vYMax\l+ clusterVarId\l+ varWeight\l+ internalEdgeWeightFactor\l+ nodes\l+ clusters\l+ hullX\l+ hullY\l# m_cluster_cluster_overlap\l_exceptions\l# m_overlap_replacement_map\l# m_nodes_replaced_with\l_clusters\l|+ Cluster()\l+ ~Cluster()\l+ computeBoundary()\l+ computeBoundingRect()\l+ addChildNode()\l+ addChildCluster()\l+ padding()\l+ margin()\l+ setDesiredBounds()\l+ unsetDesiredBounds()\land 8 more...\l# recPathToCluster()\l# includesAllNodesFrom()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{cola::ConvexCluster\n|+ hullRIDs\l+ hullCorners\l|+ computeBoundary()\l+ printCreationCode()\l+ outputToSVG()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classcola_1_1ConvexCluster.html",tooltip="Defines a cluster that will be treated as a convex boundary around the child nodes and clusters..."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{cola::RectangularCluster\n||+ RectangularCluster()\l+ RectangularCluster()\l+ setMargin()\l+ setMargin()\l+ margin()\l+ setPadding()\l+ setPadding()\l+ padding()\l+ ~RectangularCluster()\l+ computeBoundary()\land 10 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classcola_1_1RectangularCluster.html",tooltip="Defines a rectangular cluster, either variable-sized with floating sides or a fixed size based on a p..."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{cola::RootCluster\n||+ RootCluster()\l+ computeBoundary()\l+ flat()\l+ printCreationCode()\l+ outputToSVG()\l+ allowsMultipleParents()\l+ setAllowsMultipleParents()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classcola_1_1RootCluster.html",tooltip="Holds the cluster hierarchy specification for a diagram. "];
}
