digraph "dialect::NodeBuckets"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{dialect::NodeBuckets\n|+ m_maxDegree\l+ m_buckets\l|+ NodeBuckets()\l+ takeLeaves()\l+ moveNode()\l+ severNodes()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +m_graph" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{dialect::Graph\n|+ m_debugOutputPath\l+ m_projectionDebugLevel\l|+ Graph()\l+ Graph()\l+ ~Graph()\l+ operator=()\l+ getMaxDegree()\l+ addNode()\l+ addNode()\l+ addNode()\l+ addNode()\l+ addEdge()\land 64 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Graph.html",tooltip="The Graph class represents graphs consisting of nodes and edges. "];
}
