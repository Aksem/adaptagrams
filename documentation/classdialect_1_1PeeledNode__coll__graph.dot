digraph "dialect::PeeledNode"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node3 [label="{dialect::PeeledNode\n||+ operator=()\l+ ~PeeledNode()\l+ allocate()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{dialect::GhostNode\n||+ id()\l+ trueID()\l+ getChildren()\l+ setMasquerade()\l+ allocate()\l# GhostNode()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1GhostNode.html",tooltip="A GhostNode represents another Node. "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{dialect::Node\n|# m_ID\l# m_externalID\l# m_edges\l|+ makeGhost()\l+ operator=()\l+ ~Node()\l+ id()\l+ getDegree()\l+ setGraph()\l+ getGraph()\l+ addEdge()\l+ removeEdge()\l+ getEdgeLookup()\land 27 more...\l+ allocate()\l+ allocate()\l+ allocate()\l# Node()\l# Node()\l# Node()\l# Node()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdialect_1_1Node.html",tooltip="The Node class represents nodes in a graph. "];
}
